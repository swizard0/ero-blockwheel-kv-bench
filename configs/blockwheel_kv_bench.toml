# Example configuration for blockwheel_kv benchmark.

# blockwheel_kv key-value database related parameters
[blockwheel_kv]
# blockwheel kv storage n-tree block size
tree_block_size = 1536
# butcher task restart timeout (seconds) for blockwheel kv storage
butcher_task_restart_sec = 1
# manager task restart timeout (seconds) for blockwheel kv storage
manager_task_restart_sec = 1
# search tree task restart timeout (seconds) for blockwheel kv storage
search_tree_task_restart_sec = 1
# maximum number of simultaneously running blocks removing tasks for blockwheel kv storage
search_tree_remove_tasks_limit = 64
# mpsc channel send buffer before backpressure for iterators in blockwheel kv storage
search_tree_iter_send_buffer = 4
# maximum entry value size to store with the key, values with greater size will be stored in separate blocks
search_tree_values_inline_size_limit = 128

# storage areas manager related parameters
[blockwheel_wheels]
# main task restart timeout (seconds) for blockwheel kv wheels task
task_restart_sec = 1

# actual storage areas list related parameters

[[blockwheel_wheels.fss]]
# interpreter type to use
interpreter = "fixed_file"
# interpreter = "ram"
# backend file for blockwheel fs (for "fixed_file" interpreter only)
wheel_filename = "blockwheel_kv.blocks"
# initial size for backend file in case of creating new for blockwheel fs
# init_wheel_size_bytes = 1073741824
init_wheel_size_bytes = 2147483648
# main wheel task restart timeout (in seconds) for blockwheel fs
wheel_task_restart_sec = 4
# work block size for fs ops in blockwheel fs
work_block_size_bytes = 8388608
# LRU cache maximum size (in bytes) in blockwheel fs
lru_cache_size_bytes = 8388608
# maximum number of simultaneously running defragmentation tasks in blockwheel fs
defrag_parallel_tasks_limit = 8

# sled key-value database related parameters
[sled]
# the path of the database
directory = "database.sled"
# maximum size in bytes for the system page cache
cache_capacity = 16777216 # set lower to force disk access
# specify whether the system should run in "small" or "fast" mode
mode = "fast"
# print a performance profile when the Config is dropped
print_profile_on_drop = true

# bench related parameters
[bench]
# maximum number of parallel kv access tasks
# active_tasks = 3072
active_tasks = 8192
# total number of actions with kv database
# actions = 131072
actions = 1048576
# maximum key size in bytes
key_size_bytes = 32
# maximum value size in bytes
value_size_bytes = 4096
# probability for insert or remove task (probability of lookup: 1.0 - insert_or_remove_prob)
insert_or_remove_prob = 0.5
# probability for single lookup task (probability of range lookup: 1.0 - lookup_single_prob)
lookup_single_prob = 0.5
# db insert operation timeout (in seconds)
timeout_insert_secs = 120
# db lookup operation timeout (in seconds)
timeout_lookup_secs = 240
# db lookup range operation timeout (in seconds)
timeout_lookup_range_secs = 240
# db remove operation timeout (in seconds)
timeout_remove_secs = 120
# db flush operation timeout (in seconds)
timeout_flush_secs = 2400

# tokio runtime related parameters
[runtime]
# sets the number of worker threads the runtime will use
worker_threads = 4
# specifies limit for threads, spawned by the runtime
max_blocking_threads = 64
# sets the stack size (in bytes) for worker threads
thread_stack_size = 1073741824
# sets a custom timeout for a thread in the blocking pool (in milliseconds)
thread_keep_alive_ms = 10000

# edeltraud thread pool related parameters
[edeltraud]
# sets the number of threads to be used in the edeltraud threadpool
worker_threads = 4
